unit QueryDesignerDialogU;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls,DbInfo,Data.SqlExpr, TableInfo, QueryDesignerU, Vcl.Buttons,
  Vcl.ExtCtrls ;

type
  TQueryDesignerDialog = class(TForm)
    grbConfigure: TGroupBox;
    lblForeignKey: TLabel;
    lblForeignTable: TLabel;
    cmbValueMember: TComboBox;
    cmbForeignTable: TComboBox;
    pnlBottom: TPanel;
    btnAccept: TButton;
    btnCancel: TButton;
    pnlSelectFields: TPanel;
    cmbDisplayMember: TComboBox;
    btnAddField: TButton;
    procedure FormDestroy(Sender: TObject);
    procedure cmbForeignTableChange(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure cmbSelectFieldChanged(Sender:TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnAddClick(Sender: TObject);
    procedure btnAddFieldClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
    FDbInfo:TDatabaseInfo;
    FDbConnection:TSQLConnection;
    FDBSchema:string;
    FKeyField:string;
    FTableName:string;
    procedure AddSelectFieldControl(selectedItem:string);
    procedure ClearSelectFields;
  public
    { Public declarations }
    SelectFields:TStringList;
    function ShowModal(DbInfo:TDatabaseInfo;Schema,ForiegnTable,ForeignKeyField:string;VAR SelectFields:TStringList):TModalResult;
  end;

var
  QueryDesignerDialog: TQueryDesignerDialog;

implementation

{$R *.dfm}

{ TConfigureRelationForm }

procedure TQueryDesignerDialog.AddSelectFieldControl(selectedItem:string);
var
 pnl:TPanel;
 cmb:TComboBox;
 lbl:TLabel;
begin
  pnl :=TPanel.Create(pnlSelectFields);
  pnlSelectFields.InsertControl(pnl);
  pnl.Caption :='';
  pnl.Height := 25;
  pnl.Hint := selectedItem;
  pnl.Align := alTop;

  lbl := TLabel.Create(pnl);
  cmb := TComboBox.Create(pnl);
  pnl.InsertControl(lbl);
  pnl.InsertControl(cmb);

  lbl.Caption := 'Display Field';
  lbl.Left := 2;
  lbl.Top := 3;
  lbl.AutoSize := True;

  cmb.Items.AddStrings(cmbDisplayMember.Items);
  cmb.Left := cmbDisplayMember.Left;
  cmb.Width := cmbDisplayMember.Width;
  cmb.Top := 3;
  cmb.Text := selectedItem;
  cmb.Tag :=0;
  cmb.OnChange := cmbSelectFieldChanged;

  if SelectFields.Count>0 then
  cmb.Tag := SelectFields.Count-1;




  Self.Height := Self.Height + 25;
end;

procedure TQueryDesignerDialog.btnAddClick(Sender: TObject);
begin
  AddSelectFieldControl('');
end;

procedure TQueryDesignerDialog.btnAddFieldClick(Sender: TObject);
begin
    SelectFields.Add('');
    AddSelectFieldControl('');
end;

procedure TQueryDesignerDialog.ClearSelectFields;
var
  I: Integer;
begin
  for I := 0 to pnlSelectFields.ControlCount-1 do
  pnlSelectFields.Controls[0].Free;
end;

procedure TQueryDesignerDialog.cmbForeignTableChange(Sender: TObject);
begin

  cmbValueMember.Items.Clear;
  cmbDisplayMember.Items.Clear;

    FDbConnection.GetFieldNames(cmbForeignTable.Items[cmbForeignTable.ItemIndex],FDBSchema,cmbValueMember.Items);
    cmbDisplayMember.Items.AddStrings(cmbValueMember.Items);

end;

procedure TQueryDesignerDialog.cmbSelectFieldChanged(Sender: TObject);
var
 c:TComboBOx;
begin
  if Sender is TComboBox then
  begin
    c := Sender as TComboBox;
    SelectFields[c.Tag] := c.Text;
  end;
end;

procedure TQueryDesignerDialog.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  ClearSelectFields;
end;

procedure TQueryDesignerDialog.FormCreate(Sender: TObject);
begin
 SelectFields := TStringList.Create;

end;

procedure TQueryDesignerDialog.FormDestroy(Sender: TObject);
begin
  if FDbConnection<>nil then
  FDbConnection.Free;

  SelectFields.Free;
end;

procedure TQueryDesignerDialog.FormShow(Sender: TObject);
var
  I: Integer;
begin
  Height:=211;
  FDbConnection.GetTableNames(cmbForeignTable.Items,FDBSchema);

    cmbForeignTable.ItemIndex := cmbForeignTable.Items.IndexOf(FTableName);
    cmbForeignTableChange(nil);

    cmbValueMember.Text := FKeyField;
    //cmbDisplayMember.Text := FDisplayField[0];

    for I := 0 to SelectFields.Count-1 do
    begin
      AddSelectFieldControl(SelectFields[I]);
    end;

end;

function TQueryDesignerDialog.ShowModal(DbInfo:TDatabaseInfo;Schema,ForiegnTable,ForeignKeyField:string;var SelectFields:TStringList):TModalResult;
begin
  FDbInfo := DbInfo;
  FDBSchema := Schema;
  FTableName := ForiegnTable;
  FKeyField := ForeignKeyField;
  SelectFields := SelectFields;
  if SelectFields<>nil then
  SelectFields.AddStrings(SelectFields);



  if FDbConnection=nil then
  begin
    FDbConnection := FDbInfo.GetConnection;
  end;
  FDbConnection.Open;

  Result := inherited ShowModal;

end;

end.
